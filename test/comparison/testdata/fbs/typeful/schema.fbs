/// Entity documentation is copied
/// into the generated output
table Typeful  {
	id           : uint64	;
	int          : int		;
	int8         : int8		;
	int16        : int16	;
	int32        : int32	;
	int64        : int64	;
	uint         : uint		;
	uint8        : uint8	;
	uint16       : uint16	;
	uint32       : uint32	;
	uint64       : uint64	;
	bool         : bool		;
	string       : string	;
	stringvector : [string]	;
	byte         : byte		;
	ubyte        : ubyte	;
	bytevector   : [byte]	;
	ubytevector  : [ubyte]	;
	float32      : float32	;
	float64      : float64	;
	float        : float	;
	double       : double	;

	/// Relation to an entity declared later in the same file
	/// objectbox:relation=AnnotatedEntity
	relId:ulong;
}

namespace ns;

/// objectbox: relation(to=Typeful, name=typefuls), name=AnnotatedEntity
/// objectbox:relation(to = Typeful, name = m2m)
table Annotated {
	/// Objectbox requires an ID property.
	/// It is recognized automatically if it has a right name ("id") or needs to be annotated otherwise.
	/// objectbox:id
	identifier:ulong;

	/// objectbox:name="name",index
	fullName:string;

	/// objectbox:date
	time:int64;

	/// objectbox:transient
	skippedField:[uint64];

	/// objectbox:relation=Typeful
	relId:ulong;

	/// unique on string without index type implies HASH index
	/// objectbox:unique
	unique:string;

	/// objectbox:unique,index=value
    uniqueValue:string;

	/// objectbox:unique,index=hash
    uniqueHash:string;

	/// objectbox:unique,index=hash64
    uniqueHash64:string;

	/// unique on string without index type implies HASH index
	/// objectbox:unique
	uid:int;
}

/// objectbox: transient
table SkippedEntity {
}

table TSDate {
	id           : uint64	;
	/// objectbox:id-companion,date
	timestamp    : int64	;
}

table TSDateNano {
	id           : uint64	;
	/// objectbox:id-companion,date-nano
	timestamp    : int64	;
}